# JSON 스러운 방법 : 얘가 최신 방법

server:
    port: 8585


spring:
    datasource:
        url: jdbc:mysql://localhost:3306/flo_db
        username: root
        password: 1234
    thymeleaf:
        enabled: true
        cache: false
        prefix: classpath:/templates/views/
        suffix: .html
    servlet:
        multipart:
            enabled: true
            max-file-size: 100MB
            max-request-size: 110MB

#이미지 저장 파일 경로 지정 (사용자 정의 값 _ 어노테이션 value로 가져와서 쓸 값) => 내가 직접 폴더들 생성해놔야함
flo:
    file:
        adminImg: /home/flo/admin/img  #본인이 지정한 드라이브(나는 D드라이브) -> home 폴더 -> flo -> admin -> img
        musicfiles: /home/flo/music/files #본인이 지정한 드라이브(나는 D드라이브) -> home 폴더 -> flo -> music -> img
        userImg: /home/flo/user/img #본인이 지정한 드라이브(나는 D드라이브) -> home 폴더 -> flo -> user -> img
        albumImg: /home/flo/album/img #본인이 지정한 드라이브(나는 D드라이브) -> home 폴더 -> flo -> album -> img


# Swagger Settings
springdoc:
    #요청 데이터 형태
    default-consumes-media-type: application/json
    #응답 데이터 형태
    default-produces-media-type: application/json
    api-docs:
        groups:
            # API문서 그룹화 여부
            enabled: true
    swagger-ui:
        # 정렬 기준 (알파벳 기준)
        operations-sorter: alpha
        tags-sorter: alpha
        # Swagger 접근 기본 경로
        path: /swagger
        # 기본 경로 설정 비활성화 여부
        disable-swagger-default-url: true
        # 문서 확장기능 사용 여부
        doc-expansion: none
    paths-to-match:
        # 문서로 만들 API 요청 경로 목록 (요청 경로가 /api/ 로 시작하면 모두 문서화)
        - /api/**